<?xml version="1.0" encoding="utf-8" ?>
<otrs_package version="1.1">
    <Name>Znuny-Featured-Card-FAQ</Name>
    <Version>7.0.5</Version>
    <Vendor>mo-azfar</Vendor>
    <URL>https://github.com/mo-azfar/Znuny-Featured-Card-FAQ</URL>
    <License>GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007</License>
    <ChangeLog Version="7.0.1">New package.</ChangeLog>
    <ChangeLog Version="7.0.2">Change FAQ category style.</ChangeLog>
    <ChangeLog Version="7.0.3">Change color. move search bar to main column.</ChangeLog>
    <ChangeLog Version="7.0.4">Center all items.</ChangeLog>
    <ChangeLog Version="7.0.5">Remove 'No Sub Catagories' text and block if no sub category. Add login button at zoom view.</ChangeLog>
    <Description Lang="en">Display featured faq at faq main page for public and customer. Introduce card based display instead of table.</Description>
    <Framework>7.0.x</Framework>
    <IntroInstall Lang="en" Title="Install Information" Type="pre">
        &lt;br/&gt;
        &lt;b&gt;WELCOME&lt;/b&gt;
        &lt;br/&gt;
        &lt;br/&gt;
        You are about to install the package Znuny-Featured-Card-FAQ.Check &lt;a href='https://github.com/mo-azfar/Znuny-Featured-Card-FAQ' target='_blank'/&gt;README&lt;/a&gt;&lt;br/&gt;
        &lt;br/&gt;
        &lt;br/&gt;
		&lt;b&gt;1. DynamicField FAQ - FeaturedFAQ will be automatically created and assign to FAQ screen.&lt;/b&gt;
		&lt;br/&gt;
        &lt;b&gt;2. If not, do this manually. Name: FeaturedFAQ / Object: FAQ / Type: Checkbox.&lt;/b&gt;
        &lt;br/&gt;
		&lt;br/&gt;
        ((enjoy))&lt;br/&gt;
        &lt;br/&gt;
    </IntroInstall>
    <IntroUninstall Lang="en" Title="Uninstall Information" Type="pre">
		&lt;br/&gt;
		&lt;b&gt;You are about to removing the package Znuny-Featured-Card-FAQ.&lt;/b&gt;
		&lt;br/&gt;
        &lt;br/&gt;
        &lt;b&gt;DynamicField FAQ - FeaturedFAQ will be not deleted. However, it will be removed from the FAQ screen.&lt;/b&gt;
        &lt;br/&gt;
        &lt;br/&gt;
	</IntroUninstall>
    <PackageRequired Version="7.0.1">FAQ</PackageRequired>
    <CodeInstall Type="post">
my $ZnunyHelperObject = $Kernel::OM-&gt;Get('Kernel::System::ZnunyHelper');
#create dynamic field faq featured
my @DynamicFields = (
        {
            Name       =&gt; 'FeaturedFAQ',
            Label      =&gt; &quot;Featured FAQ ?&quot;,
            ObjectType =&gt; 'FAQ',
            FieldType  =&gt; 'Checkbox',
            Config     =&gt; {
                DefaultValue =&gt; &quot;0&quot;,
            },
        },
    );
my $Success1 = $ZnunyHelperObject-&gt;_DynamicFieldsCreateIfNotExists( @DynamicFields );

my %Screens = (
        'FAQ::Frontend::OverviewSmall###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
        'FAQ::Frontend::AgentFAQAdd###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
        'FAQ::Frontend::AgentFAQEdit###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
        'FAQ::Frontend::AgentFAQZoom###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
    );
my $Success2 = $ZnunyHelperObject-&gt;_DynamicFieldsScreenEnable(%Screens);
</CodeInstall>
    <CodeUninstall Type="post">
my $ZnunyHelperObject = $Kernel::OM-&gt;Get('Kernel::System::ZnunyHelper');
my %Screens = (
        'FAQ::Frontend::OverviewSmall###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
        'FAQ::Frontend::AgentFAQAdd###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
        'FAQ::Frontend::AgentFAQEdit###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
        'FAQ::Frontend::AgentFAQZoom###DynamicField' =&gt; {
            FeaturedFAQ =&gt; 1,
        },
    );
my $Success1 =  $ZnunyHelperObject-&gt;_DynamicFieldsScreenDisable(%Screens);
</CodeUninstall>
    <BuildDate>2024-02-06 21:40:47</BuildDate>
    <BuildHost>app.wsl.my</BuildHost>
    <Filelist>
        <File Location="Kernel/Config/Files/XML/ZZZFAQCard.xml" Permission="660" Encode="Base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPG90cnNfY29uZmlnIHZlcnNpb249IjIuMCIgaW5pdD0iQ29uZmlnIj4KICAgIDxTZXR0aW5nIE5hbWU9IkxvYWRlcjo6TW9kdWxlOjpQdWJsaWNGQVFFeHBsb3JlciMjIzAwMy1GQVEiIFJlcXVpcmVkPSIwIiBWYWxpZD0iMSI+CiAgICAgICAgPERlc2NyaXB0aW9uIFRyYW5zbGF0YWJsZT0iMSI+TGlzdCBvZiBDU1MgYW5kIEpTIGZpbGVzIHRvIGFsd2F5cyBiZSBsb2FkZWQgZm9yIHRoZSBwdWJsaWMgaW50ZXJmYWNlLjwvRGVzY3JpcHRpb24+CiAgICAgICAgPE5hdmlnYXRpb24+RnJvbnRlbmQ6OlB1YmxpYzo6TW9kdWxlUmVnaXN0cmF0aW9uPC9OYXZpZ2F0aW9uPgogICAgICAgIDxWYWx1ZT4KICAgICAgICAgICAgPEhhc2g+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9IkNTUyI+CiAgICAgICAgICAgICAgICAgICAgPEFycmF5PgogICAgICAgICAgICAgICAgICAgICAgICA8SXRlbT5GQVEuRkFRQ2FyZC5jc3M8L0l0ZW0+CiAgICAgICAgICAgICAgICAgICAgPC9BcnJheT4KICAgICAgICAgICAgICAgIDwvSXRlbT4KICAgICAgICAgICAgPC9IYXNoPgogICAgICAgIDwvVmFsdWU+CiAgICA8L1NldHRpbmc+Cgk8U2V0dGluZyBOYW1lPSJMb2FkZXI6Ok1vZHVsZTo6UHVibGljRkFRU2VhcmNoIyMjMDAzLUZBUSIgUmVxdWlyZWQ9IjAiIFZhbGlkPSIxIj4KICAgICAgICA8RGVzY3JpcHRpb24gVHJhbnNsYXRhYmxlPSIxIj5MaXN0IG9mIENTUyBhbmQgSlMgZmlsZXMgdG8gYWx3YXlzIGJlIGxvYWRlZCBmb3IgdGhlIHB1YmxpYyBpbnRlcmZhY2UuPC9EZXNjcmlwdGlvbj4KICAgICAgICA8TmF2aWdhdGlvbj5Gcm9udGVuZDo6UHVibGljOjpNb2R1bGVSZWdpc3RyYXRpb248L05hdmlnYXRpb24+CiAgICAgICAgPFZhbHVlPgogICAgICAgICAgICA8SGFzaD4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iQ1NTIj4KICAgICAgICAgICAgICAgICAgICA8QXJyYXk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJdGVtPkZBUS5GQVFDYXJkLmNzczwvSXRlbT4KICAgICAgICAgICAgICAgICAgICA8L0FycmF5PgogICAgICAgICAgICAgICAgPC9JdGVtPgogICAgICAgICAgICA8L0hhc2g+CiAgICAgICAgPC9WYWx1ZT4KICAgIDwvU2V0dGluZz4KICAgIDxTZXR0aW5nIE5hbWU9IkxvYWRlcjo6TW9kdWxlOjpDdXN0b21lckZBUUV4cGxvcmVyIyMjMDAzLUZBUSIgUmVxdWlyZWQ9IjAiIFZhbGlkPSIxIj4KICAgICAgICA8RGVzY3JpcHRpb24gVHJhbnNsYXRhYmxlPSIxIj5MaXN0IG9mIENTUyBhbmQgSlMgZmlsZXMgdG8gYWx3YXlzIGJlIGxvYWRlZCBmb3IgdGhlIGN1c3RvbWVyIGludGVyZmFjZS48L0Rlc2NyaXB0aW9uPgogICAgICAgIDxOYXZpZ2F0aW9uPkZyb250ZW5kOjpDdXN0b21lcjo6TW9kdWxlUmVnaXN0cmF0aW9uOjpMb2FkZXI8L05hdmlnYXRpb24+CiAgICAgICAgPFZhbHVlPgogICAgICAgICAgICA8SGFzaD4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iQ1NTIj4KICAgICAgICAgICAgICAgICAgICA8QXJyYXk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJdGVtPkZBUS5GQVFDYXJkLmNzczwvSXRlbT4KICAgICAgICAgICAgICAgICAgICA8L0FycmF5PgogICAgICAgICAgICAgICAgPC9JdGVtPgogICAgICAgICAgICA8L0hhc2g+CiAgICAgICAgPC9WYWx1ZT4KICAgIDwvU2V0dGluZz4KCTxTZXR0aW5nIE5hbWU9IkxvYWRlcjo6TW9kdWxlOjpDdXN0b21lckZBUVNlYXJjaCMjIzAwMy1GQVEiIFJlcXVpcmVkPSIwIiBWYWxpZD0iMSI+CiAgICAgICAgPERlc2NyaXB0aW9uIFRyYW5zbGF0YWJsZT0iMSI+TGlzdCBvZiBDU1MgYW5kIEpTIGZpbGVzIHRvIGFsd2F5cyBiZSBsb2FkZWQgZm9yIHRoZSBjdXN0b21lciBpbnRlcmZhY2UuPC9EZXNjcmlwdGlvbj4KICAgICAgICA8TmF2aWdhdGlvbj5Gcm9udGVuZDo6Q3VzdG9tZXI6Ok1vZHVsZVJlZ2lzdHJhdGlvbjo6TG9hZGVyPC9OYXZpZ2F0aW9uPgogICAgICAgIDxWYWx1ZT4KICAgICAgICAgICAgPEhhc2g+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9IkNTUyI+CiAgICAgICAgICAgICAgICAgICAgPEFycmF5PgogICAgICAgICAgICAgICAgICAgICAgICA8SXRlbT5GQVEuRkFRQ2FyZC5jc3M8L0l0ZW0+CiAgICAgICAgICAgICAgICAgICAgPC9BcnJheT4KICAgICAgICAgICAgICAgIDwvSXRlbT4KICAgICAgICAgICAgPC9IYXNoPgogICAgICAgIDwvVmFsdWU+CiAgICA8L1NldHRpbmc+Cjwvb3Ryc19jb25maWc+</File>
        <File Location="Custom/Kernel/Modules/CustomerFAQExplorer.pm" Permission="660" Encode="Base64"></File>
        <File Location="Custom/Kernel/Modules/PublicFAQExplorer.pm" Permission="660" Encode="Base64"></File>
        <File Location="Custom/Kernel/Output/HTML/Templates/Standard/CustomerFAQExplorer.tt" Permission="660" Encode="Base64"></File>
        <File Location="Custom/Kernel/Output/HTML/Templates/Standard/CustomerFAQSearchResultShort.tt" Permission="660" Encode="Base64">IyAtLQojIENvcHlyaWdodCAoQykgMjAwMS0yMDIxIE9UUlMgQUcsIGh0dHBzOi8vb3Rycy5jb20vCiMgQ29weXJpZ2h0IChDKSAyMDIxIFpudW55IEdtYkgsIGh0dHBzOi8vem51bnkub3JnLwojIENvcHlyaWdodCAoQykgMjAyMyBtby1hemZhciwgaHR0cHM6Ly9naXRodWIuY29tL21vLWF6ZmFyLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMy4wLnR4dC4KIyAtLQoKPGRpdiBpZD0iTWFpbkJveCIgY2xhc3M9IlRpY2tldFZpZXcgQVJJQVJvbGVNYWluIFNlYXJjaFJlc3VsdHMgWyUgQ29uZmlnKCJUaWNrZXQ6OkZyb250ZW5kOjpDdXN0b21lclRpY2tldE92ZXJ2aWV3U29ydGFibGUiKSAlXSBTb3J0YWJsZSI+CiAgICA8ZGl2IGNsYXNzPSJDb250ZW50V3JhcHBlciBmbGV4LWNvbHVtbiI+CiAgICAgICAgPGgxIGNsYXNzPSJQYWdlVGl0bGUiPlslIFRyYW5zbGF0ZSgiU2VhcmNoIFJlc3VsdHMiKSB8IGh0bWwgJV08L2gxPgogICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQgZmxleC1jZW50ZXIgU2lkZWJhckxhc3QiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJTaWRlYmFyQ29sdW1uIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IldpZGdldFNpbXBsZSBzZWFyY2gtdHBsLXdpZGdldCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGgyPlslIFRyYW5zbGF0ZSgiVGVtcGxhdGUiKSB8IGh0bWwgJV08L2gyPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJGaWVsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LXJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlslIERhdGEuUHJvZmlsZU5hbWUgfCBodG1sICVdPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtd3JhcHBlciI+CgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJTZWFyY2hUZXJtcyIpICVdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwaWxsLXNtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFslIERhdGEuQXR0cmlidXRlIHwgaHRtbCAlXTogWyUgRGF0YS5WYWx1ZSB8IGh0bWwgJV0KIyBoaWRlIHJlbW92ZSBsaW5rLCBmdW5jdGlvbmFsaXR5IGlzIG5vdCB5ZXQgaW1wbGVtZW50ZWQKIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iWyUgVHJhbnNsYXRlKCJSZW1vdmUgdGhpcyBTZWFyY2ggVGVybS4iKSB8IGh0bWwgJV0iIGhyZWY9IlslIERhdGEuU2VhcmNoVmFsdWUgJV0iPiZ0aW1lczs8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KWyUgUmVuZGVyQmxvY2tFbmQoIlNlYXJjaFRlcm1zIikgJV0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LXJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJbJSBFbnYoIkJhc2VsaW5rIikgJV1BY3Rpb249WyUgRW52KCJBY3Rpb24iKSAlXTtTdWJhY3Rpb249TG9hZFByb2ZpbGU7WyUgRGF0YS5MaW5rIHwgaHRtbCAlXSIgY2xhc3M9ImJ0bi1wcmltYXJ5IGJ0bi1tYWluIj5bJSBUcmFuc2xhdGUoIkNoYW5nZSBzZWFyY2ggb3B0aW9ucyIpIHwgaHRtbCAlXSA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgQ29udGVudENvbHVtbiBwYWRkaW5nLW5vbmUiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT3ZlcnZpZXdBY3Rpb25zIj4KClslIFJlbmRlckJsb2NrU3RhcnQoIkJvdHRvbVN1Yk5hdmlnYXRpb24iKSAlXQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJCb3R0b21BY3Rpb25Sb3ciIGNsYXNzPSJBY3Rpb25Sb3cgQmlnQnV0dG9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9IlRhYnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iWyUgRW52KCJCYXNlbGluayIpICVdQWN0aW9uPVslIEVudigiQWN0aW9uIikgJV07U3ViYWN0aW9uPUxvYWRQcm9maWxlO1slIERhdGEuTGluayB8IHVyaSAlXSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmbGFycjsgWyUgVHJhbnNsYXRlKCJDaGFuZ2Ugc2VhcmNoIG9wdGlvbnMiKSB8IGh0bWwgJV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJQYWdpbmF0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlslIERhdGEuUmVzdWx0ICVdIFslIFRyYW5zbGF0ZSgib2YiKSB8IGh0bWwgJV0gWyUgRGF0YS5Ub3RhbEhpdHMgJV08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InBhZ2UtbGlua3MiPlslIERhdGEuU2l0ZU5hdkJhciAlXTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgpbJSBSZW5kZXJCbG9ja0VuZCgiQm90dG9tU3ViTmF2aWdhdGlvbiIpICVdCgogICAgICAgICAgICAgICAgPC9kaXY+ClslIFJlbmRlckJsb2NrU3RhcnQoIk5vRGF0YUZvdW5kTXNnIikgJV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPlslIFRyYW5zbGF0ZSgiTm8gRkFRIGRhdGEgZm91bmQuIikgfCBodG1sICVdPC9hPgpbJSBSZW5kZXJCbG9ja0VuZCgiTm9EYXRhRm91bmRNc2ciKSAlXQoKIyAtLQojIEZlYXR1cmVkIGFuZCBDYXJkIEZBUQojIC0tCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJSZWNvcmQiKSAlXQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iV2lkZ2V0U2ltcGxlIFdpZGdldFNpbXBsZUV4dGVuZGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz48YSBocmVmPSJbJSBFbnYoIkJhc2VsaW5rIikgJV1BY3Rpb249UHVibGljRkFRWm9vbTtJdGVtSUQ9WyUgRGF0YS5GQVFJRCB8IHVyaSAlXTtab29tQmFja0xpbms9WyUgRGF0YS5ab29tQmFja0xpbmsgfCB1cmkgJV07IiBjbGFzcz0iZmFxLW5vLWxpbmsiPkZBUSNbJSBEYXRhLk51bWJlciB8IGh0bWwgJV08L2E+PC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmFxLXRpdGxlIiB0aXRsZT0iWyUgRGF0YS5UaXRsZSB8IGh0bWwgJV0iPjxhIGhyZWY9IlslIEVudigiQmFzZWxpbmsiKSAlXUFjdGlvbj1DdXN0b21lckZBUVpvb207SXRlbUlEPVslIERhdGEuRkFRSUQgfCB1cmkgJV07IiBjbGFzcz0iZmFxLW5vLWxpbmsiPlslIERhdGEuVGl0bGUgfCB0cnVuY2F0ZSgxNjApIHwgaHRtbCAlXTwvYT48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZXh0cmEtcGlsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YXRlLXBpbGwiIHRpdGxlPSJMYXN0IFVwZGF0ZWQiPlslIERhdGEuQ2hhbmdlZCB8IGh0bWwgJV08L3NwYW4+ClslIFJlbmRlckJsb2NrU3RhcnQoIlJlY29yZExhbmd1YWdlIikgJV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGFuZ3VhZ2UtcGlsbCIgdGl0bGU9Ikxhbmd1YWdlIj5bJSBEYXRhLkxhbmd1YWdlIHwgdHJ1bmNhdGUoNSkgfCBodG1sICVdPC9zcGFuPgpbJSBSZW5kZXJCbG9ja0VuZCgiUmVjb3JkTGFuZ3VhZ2UiKSAlXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXQtcGlsbCIgdGl0bGU9IkNhdGVnb3J5Ij5bJSBEYXRhLkNhdGVnb3J5TmFtZSB8IHRydW5jYXRlKDQ1KSB8IGh0bWwgJV08L3NwYW4+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4gIAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgIApbJSBSZW5kZXJCbG9ja0VuZCgiUmVjb3JkIikgJV0KICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgIAojIC0tICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+Cg==</File>
        <File Location="Custom/Kernel/Output/HTML/Templates/Standard/PublicFAQExplorer.tt" Permission="660" Encode="Base64"></File>
        <File Location="Custom/Kernel/Output/HTML/Templates/Standard/PublicFAQSearchResultShort.tt" Permission="660" Encode="Base64">IyAtLQojIENvcHlyaWdodCAoQykgMjAwMS0yMDIxIE9UUlMgQUcsIGh0dHBzOi8vb3Rycy5jb20vCiMgQ29weXJpZ2h0IChDKSAyMDIxIFpudW55IEdtYkgsIGh0dHBzOi8vem51bnkub3JnLwojIENvcHlyaWdodCAoQykgMjAyMyBtby1hemZhciwgaHR0cHM6Ly9naXRodWIuY29tL21vLWF6ZmFyLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMy4wLnR4dC4KIyAtLQoKPGRpdiBpZD0iTWFpbkJveCIgY2xhc3M9IlRpY2tldFZpZXcgQVJJQVJvbGVNYWluIFNlYXJjaFJlc3VsdHMgWyUgQ29uZmlnKCJUaWNrZXQ6OkZyb250ZW5kOjpDdXN0b21lclRpY2tldE92ZXJ2aWV3U29ydGFibGUiKSAlXSBTb3J0YWJsZSI+CiAgICA8ZGl2IGNsYXNzPSJDb250ZW50V3JhcHBlciBmbGV4LWNvbHVtbiI+CiAgICAgICAgPGRpdiBjbGFzcz0iQ29udGVudFdyYXBwZXIgZmxleC1jb2x1bW4iPgogICAgICAgICAgICA8aDEgY2xhc3M9IlBhZ2VUaXRsZSI+WyUgVHJhbnNsYXRlKCJTZWFyY2ggUmVzdWx0cyIpIHwgaHRtbCAlXTwvaDE+CgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJCYWNrIikgJV0KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iQnJlYWRDcnVtYiI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJbJSBFbnYoIkJhc2VsaW5rIikgJV1bJSBEYXRhLlNlYXJjaEJhY2tMaW5rIHwgaHRtbCAlXSIgY2xhc3M9Ikhpc3RvcnlCYWNrIj5bJSBUcmFuc2xhdGUoIkJhY2sgdG8gRkFRIEV4cGxvcmVyIikgfCBodG1sICVdPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgpbJSBSZW5kZXJCbG9ja0VuZCgiQmFjayIpICVdCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50IGZsZXgtY2VudGVyIFNpZGViYXJMYXN0Ij4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJTaWRlYmFyQ29sdW1uIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUgc2VhcmNoLXRwbC13aWRnZXQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJIZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPlslIFRyYW5zbGF0ZSgiVGVtcGxhdGUiKSB8IGh0bWwgJV08L2gyPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LXJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5bJSBEYXRhLlByb2ZpbGVOYW1lIHwgaHRtbCAlXTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtd3JhcHBlciI+CgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJTZWFyY2hUZXJtcyIpICVdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGlsbC1zbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWyUgRGF0YS5BdHRyaWJ1dGUgfCBodG1sICVdOiBbJSBEYXRhLlZhbHVlIHwgaHRtbCAlXQojIGhpZGUgcmVtb3ZlIGxpbmssIGZ1bmN0aW9uYWxpdHkgaXMgbm90IHlldCBpbXBsZW1lbnRlZAojICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSJbJSBUcmFuc2xhdGUoIlJlbW92ZSB0aGlzIFNlYXJjaCBUZXJtLiIpIHwgaHRtbCAlXSIgaHJlZj0iWyUgRGF0YS5TZWFyY2hWYWx1ZSAlXSI+JnRpbWVzOzwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KWyUgUmVuZGVyQmxvY2tFbmQoIlNlYXJjaFRlcm1zIikgJV0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LXJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iWyUgRW52KCJCYXNlbGluayIpICVdQWN0aW9uPVslIEVudigiQWN0aW9uIikgJV07WyUgRGF0YS5MaW5rIHwgaHRtbCAlXSIgY2xhc3M9ImJ0bi1wcmltYXJ5IGJ0bi1tYWluIj5bJSBUcmFuc2xhdGUoIkNoYW5nZSBzZWFyY2ggb3B0aW9ucyIpIHwgaHRtbCAlXSA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIENvbnRlbnRDb2x1bW4gcGFkZGluZy1ub25lIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPdmVydmlld0FjdGlvbnMiPgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJQYWdpbmF0aW9uIikgJV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IlRhYnMgUGFnaW5hdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5bJSBEYXRhLlJlc3VsdCB8IGh0bWwgJV08L3N0cm9uZz4gWyUgVHJhbnNsYXRlKCJvZiIpIHwgaHRtbCAlXSA8c3Ryb25nPlslIERhdGEuVG90YWxIaXRzIHwgaHRtbCAlXTwvc3Ryb25nPiAtIFslIFRyYW5zbGF0ZSgiUGFnZSIpIHwgaHRtbCAlXTogWyUgRGF0YS5TaXRlTmF2QmFyICVdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KWyUgUmVuZGVyQmxvY2tFbmQoIlBhZ2luYXRpb24iKSAlXQogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKWyUgUmVuZGVyQmxvY2tTdGFydCgiTm9EYXRhRm91bmRNc2ciKSAlXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPlslIFRyYW5zbGF0ZSgiTm8gRkFRIGRhdGEgZm91bmQuIikgfCBodG1sICVdPC9hPgpbJSBSZW5kZXJCbG9ja0VuZCgiTm9EYXRhRm91bmRNc2ciKSAlXQoKIyAtLQojIEZlYXR1cmVkIGFuZCBDYXJkIEZBUQojIC0tCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJSZWNvcmQiKSAlXQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iV2lkZ2V0U2ltcGxlIFdpZGdldFNpbXBsZUV4dGVuZGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz48YSBocmVmPSJbJSBFbnYoIkJhc2VsaW5rIikgJV1BY3Rpb249UHVibGljRkFRWm9vbTtJdGVtSUQ9WyUgRGF0YS5GQVFJRCB8IHVyaSAlXTtab29tQmFja0xpbms9WyUgRGF0YS5ab29tQmFja0xpbmsgfCB1cmkgJV07IiBjbGFzcz0iZmFxLW5vLWxpbmsiPkZBUSNbJSBEYXRhLk51bWJlciB8IGh0bWwgJV08L2E+PC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmFxLXRpdGxlIiB0aXRsZT0iWyUgRGF0YS5UaXRsZSB8IGh0bWwgJV0iPjxhIGhyZWY9IlslIEVudigiQmFzZWxpbmsiKSAlXUFjdGlvbj1QdWJsaWNGQVFab29tO0l0ZW1JRD1bJSBEYXRhLkZBUUlEIHwgdXJpICVdO1pvb21CYWNrTGluaz1bJSBEYXRhLlpvb21CYWNrTGluayB8IHVyaSAlXTsiIGNsYXNzPSJmYXEtbm8tbGluayI+WyUgRGF0YS5UaXRsZSB8IHRydW5jYXRlKDE2MCkgfCBodG1sICVdPC9hPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJleHRyYS1waWxsIj4KWyUgUmVuZGVyQmxvY2tTdGFydCgiUmVjb3JkTGFuZ3VhZ2UiKSAlXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsYW5ndWFnZS1waWxsIiB0aXRsZT0iTGFuZ3VhZ2UiPlslIERhdGEuTGFuZ3VhZ2UgfCB0cnVuY2F0ZSg1KSB8IGh0bWwgJV08L3NwYW4+ClslIFJlbmRlckJsb2NrRW5kKCJSZWNvcmRMYW5ndWFnZSIpICVdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhdC1waWxsIiB0aXRsZT0iQ2F0ZWdvcnkiPlslIERhdGEuQ2F0ZWdvcnlOYW1lIHwgdHJ1bmNhdGUoNDUpIHwgaHRtbCAlXTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4gIAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIApbJSBSZW5kZXJCbG9ja0VuZCgiUmVjb3JkIikgJV0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIAojIC0tClslIFJlbmRlckJsb2NrU3RhcnQoIkJvdHRvbVN1Yk5hdmlnYXRpb24iKSAlXQogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9IkJvdHRvbUFjdGlvblJvdyIgY2xhc3M9IkFjdGlvblJvdyBCaWdCdXR0b25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJUYWJzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJbJSBFbnYoIkJhc2VsaW5rIikgJV1BY3Rpb249WyUgRW52KCJBY3Rpb24iKSAlXTtTdWJhY3Rpb249TG9hZFByb2ZpbGU7WyUgRGF0YS5MaW5rIHwgdXJpICVdIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJmxhcnI7IFslIFRyYW5zbGF0ZSgiQ2hhbmdlIHNlYXJjaCBvcHRpb25zIikgfCBodG1sICVdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJQYWdpbmF0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlslIERhdGEuUmVzdWx0ICVdIFslIFRyYW5zbGF0ZSgib2YiKSB8IGh0bWwgJV0gWyUgRGF0YS5Ub3RhbEhpdHMgJV08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJwYWdlLWxpbmtzIj5bJSBEYXRhLlNpdGVOYXZCYXIgJV08L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgpbJSBSZW5kZXJCbG9ja0VuZCgiQm90dG9tU3ViTmF2aWdhdGlvbiIpICVdCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+</File>
        <File Location="Custom/Kernel/Output/HTML/Templates/Standard/PublicFAQZoom.tt" Permission="660" Encode="Base64"></File>
        <File Location="var/httpd/htdocs/skins/Customer/default/css/FAQ.FAQCard.css" Permission="660" Encode="Base64">LyoKQ29weXJpZ2h0IChDKSAyMDAxLTIwMjEgT1RSUyBBRywgaHR0cHM6Ly9vdHJzLmNvbS8KQ29weXJpZ2h0IChDKSAyMDIxIFpudW55IEdtYkgsIGh0dHBzOi8vem51bnkub3JnLwpDb3B5cmlnaHQgKEMpIDIwMjMgbW8tYXpmYXIsIGh0dHBzOi8vZ2l0aHViLmNvbS9tby1hemZhci8KClRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCnRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEdQTCkuIElmIHlvdQpkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMy4wLnR4dC4KKi8KCkBtZWRpYSBzY3JlZW4sCnByb2plY3Rpb24sCnR2LApoYW5kaGVsZCB7CgogICAgLldpZGdldFNpbXBsZUV4dGVuZGVkIHsKICAgICAgICBtaW4taGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgYm94LXNoYWRvdzogMCAwLjI1cmVtIDAuNXJlbSAwIHJnYmEoMCwgMCwgMCwgMC4yKTsKICAgIH0KCiAgICAuV2lkZ2V0U2ltcGxlRXh0ZW5kZWQ6aG92ZXIgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmU4ZDM7CiAgICB9CgogICAgLnNlYXJjaC13aWRnZXQtZXh0ZW5kZWQgewogICAgICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgICAgICAgYm9yZGVyOiBub25lOwogICAgfQoKICAgIC8qIEZBUSBDQVRFR09SWSAqLwogICAgLnJvdy1jYXQgewogICAgICAgIG1hcmdpbjogMCAtMC4zMTNyZW07CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICAgICAgYm9yZGVyLWJvdHRvbTogMC4xcmVtIGRvdWJsZSAjZThlOGU4OwogICAgICAgIG1hcmdpbi1ib3R0b206IDAuM3JlbTsKICAgIH0KCiAgICAvKiBDbGVhciBmbG9hdHMgYWZ0ZXIgdGhlIGNvbHVtbnMgKi8KICAgIC5yb3ctY2F0OmFmdGVyIHsKICAgICAgICBjb250ZW50OiAiIjsKICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICBjbGVhcjogYm90aDsKICAgIH0KCiAgICAvKiBGbG9hdCA1IGNvbHVtbnMgc2lkZSBieSBzaWRlICovCiAgICAuY29sdW1uLWNhdCB7CiAgICAgICAgZmxvYXQ6IGxlZnQ7CiAgICAgICAgd2lkdGg6IDIwJTsKICAgICAgICBwYWRkaW5nOiAwIDAuNjI1cmVtOwogICAgICAgIHBhZGRpbmctYm90dG9tOiAxLjJyZW07CiAgICB9CgogICAgLmZhcS1jYXQgewogICAgICAgIGZvbnQtc2l6ZTogMC44MTNyZW07CiAgICAgICAgY29sb3I6ICM5NTAyMDI7CiAgICAgICAgcGFkZGluZzogMC4zMTNyZW07CiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgIGJveC1zaGFkb3c6IDAgMC4yNXJlbSAwLjVyZW0gMCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgICB9CgogICAgLmZhcS1jYXQtbmFtZSB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZThkMzsKICAgIH0KCiAgICAuZmFxLWNhdC1uYW1lIHAgewogICAgICAgIGNvbG9yOiAjOTUwMjAyOwogICAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTsKICAgIH0KCgogICAgLyogRkFRIElURU0gKi8KICAgIC5yb3cgewogICAgICAgIG1hcmdpbjogMCAtMC4zMTNyZW07CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICB9CgogICAgLyogQ2xlYXIgZmxvYXRzIGFmdGVyIHRoZSBjb2x1bW5zICovCiAgICAucm93OmFmdGVyIHsKICAgICAgICBjb250ZW50OiAiIjsKICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICBjbGVhcjogYm90aDsKICAgIH0KCiAgICAvKiBGbG9hdCAzIGNvbHVtbnMgc2lkZSBieSBzaWRlICovCiAgICAuY29sdW1uIHsKICAgICAgICBmbG9hdDogbGVmdDsKICAgICAgICB3aWR0aDogMzMlOwogICAgICAgIHBhZGRpbmc6IDAgMC42MjVyZW07CiAgICAgICAgcGFkZGluZy1ib3R0b206IDEuMnJlbTsKICAgIH0KCiAgICAuZmFxLXRpdGxlIHsKICAgICAgICBmb250LXNpemU6IDAuODEzcmVtOwogICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICAgICAgcGFkZGluZy1ib3R0b206IDglOwogICAgfQoKICAgIC5mYXEtbm8tbGluayB7CiAgICAgICAgY29sb3I6ICMwZjBmMTA7CiAgICB9CgogICAgLmV4dHJhLXBpbGwgewogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICBib3R0b206IDAuNjI1cmVtOwogICAgICAgIHJpZ2h0OiAwLjYyNXJlbTsKICAgICAgICBmb250LWZhbWlseTogQ291cmllciwgbW9ub3NwYWNlOwogICAgICAgIGZvbnQtc2l6ZTogMC42ODhyZW07CiAgICAgICAgY29sb3I6ICNmZmZmZmY7CiAgICB9CgogICAgLmZlYXR1cmVkLXBpbGwgewogICAgICAgIGNvbG9yOiBvcmFuZ2U7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQyNDI0MTsKICAgICAgICBib3JkZXI6IG5vbmU7CiAgICAgICAgcGFkZGluZzogMC4xMjVyZW0gMC4xODhyZW07CiAgICAgICAgYm9yZGVyLXJhZGl1czogMy4xMjVyZW0gMS4yNXJlbTsKICAgIH0KCiAgICAuc3RhdGUtcGlsbCB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzZiOGUyMzsKICAgICAgICBib3JkZXI6IG5vbmU7CiAgICAgICAgcGFkZGluZzogMC4xMjVyZW0gMC4xODhyZW07CiAgICAgICAgYm9yZGVyLXJhZGl1czogMy4xMjVyZW0gMS4yNXJlbTsKICAgIH0KCiAgICAubGFuZ3VhZ2UtcGlsbCB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwOGI4YjsKICAgICAgICBib3JkZXI6IG5vbmU7CiAgICAgICAgcGFkZGluZzogMC4xMjVyZW0gMC4xODhyZW07CiAgICAgICAgYm9yZGVyLXJhZGl1czogMy4xMjVyZW0gMS4yNXJlbTsKICAgIH0KCiAgICAuY2F0LXBpbGwgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyYjY3YzQ7CiAgICAgICAgYm9yZGVyOiBub25lOwogICAgICAgIHBhZGRpbmc6IDAuMTI1cmVtIDAuMTg4cmVtOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDMuMTI1cmVtIDEuMjVyZW07CiAgICB9CgogICAgLyogUmVzcG9uc2l2ZSBjb2x1bW5zICovCiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogICAgICAgIC5jb2x1bW4gewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuMXJlbTsKICAgICAgICB9CgogICAgICAgIC5jb2x1bW4tY2F0IHsKICAgICAgICAgICAgd2lkdGg6IDUwJTsKICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuMXJlbTsKICAgICAgICB9CiAgICB9Cgp9CgovKiBlbmQgQG1lZGlhICov</File>
    </Filelist>
</otrs_package>